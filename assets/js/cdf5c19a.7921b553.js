"use strict";(self.webpackChunksuiweb_website=self.webpackChunksuiweb_website||[]).push([[655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(n),f=i,u=m["".concat(o,".").concat(f)]||m[f]||k[f]||r;return n?a.createElement(u,l(l({ref:t},s),{},{components:n})):a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=f;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:i,l[1]=p;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const r={id:"fiber",title:"Module: fiber",sidebar_label:"fiber",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"api/internal/modules/fiber",id:"api/internal/modules/fiber",title:"Module: fiber",description:"Type Aliases",source:"@site/docs/api/internal/modules/fiber.md",sourceDirName:"api/internal/modules",slug:"/api/internal/modules/fiber",permalink:"/docs/api/internal/modules/fiber",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"fiber",title:"Module: fiber",sidebar_label:"fiber",sidebar_position:0,custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"dom",permalink:"/docs/api/internal/modules/dom"},next:{title:"hooks",permalink:"/docs/api/internal/modules/hooks"}},o={},d=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"CreateElementFunction",id:"createelementfunction",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in",level:4},{value:"Fiber",id:"fiber",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"FiberFunction",id:"fiberfunction",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"FunctionalFiber",id:"functionalfiber",level:3},{value:"StaticFiber Properties",id:"staticfiber-properties",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"Props",id:"props",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"StaticFiber",id:"staticfiber",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"StaticFiberType",id:"staticfibertype",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"StyleProp",id:"styleprop",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"Functions",id:"functions",level:2},{value:"createElement",id:"createelement",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"isFunctionalFiber",id:"isfunctionalfiber",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"isNormalProp",id:"isnormalprop",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"isStaticFiber",id:"isstaticfiber",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4}],s={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,i.kt)("h3",{id:"createelementfunction"},"CreateElementFunction"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"CreateElementFunction"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">",": (",(0,i.kt)("inlineCode",{parentName:"p"},"type"),": keyof ",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLElementTagNameMap")," ","|"," (",(0,i.kt)("inlineCode",{parentName:"p"},"props?"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">",") => ",(0,i.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),", ...",(0,i.kt)("inlineCode",{parentName:"p"},"children"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"T")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/utils#primitive"},(0,i.kt)("inlineCode",{parentName:"a"},"Primitive")),")[]) => ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber")))))),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"...children"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"A function which creates elements from a ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"children"),".\nCan be used with SJDON, but also standards like JSX.\nIt is in the same format as the ",(0,i.kt)("inlineCode",{parentName:"p"},"React.createElement")," function so it could possibly\nbe interchanged. But note that the typings don't match exactly,\ne.g., ",(0,i.kt)("inlineCode",{parentName:"p"},"React.createElement")," can't handle all values of ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#props"},"Props"),"."),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"HTMLElementTagNameMap")," ","|"," (",(0,i.kt)("inlineCode",{parentName:"td"},"props?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),">",") => ",(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type can either be a HTML tag or a function, which returns an element.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"null")),(0,i.kt)("td",{parentName:"tr",align:"left"},'The props of the element. If JSX is used instead of SJDON, it has to be made sure that the "special props" like ',(0,i.kt)("inlineCode",{parentName:"td"},"style")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"key")," overlap enough with the ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#props"},"Props"),". This should be the case for the properties ",(0,i.kt)("inlineCode",{parentName:"td"},"style")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"key"),", but is not guaranteed for all props. To provide basic functionality, also JSX ",(0,i.kt)("inlineCode",{parentName:"td"},"on<Event>")," event handlers are supported.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...children")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("inlineCode",{parentName:"td"},"T")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/utils#primitive"},(0,i.kt)("inlineCode",{parentName:"a"},"Primitive")),")[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The children of the element.")))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"The generated element."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L171"},"fiber.ts:171")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fiber"},"Fiber"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"Fiber"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},(0,i.kt)("inlineCode",{parentName:"a"},"StaticFiber"))," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},(0,i.kt)("inlineCode",{parentName:"a"},"FunctionalFiber"))),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"Fiber")," can be either a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber")," or a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber"),"."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L6"},"fiber.ts:6")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fiberfunction"},"FiberFunction"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"FiberFunction"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"props?"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props")),") => ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"props?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"FiberFunction")," of a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber"),", which returns a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},"Fiber"),"."),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props")))))),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L97"},"fiber.ts:97")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"functionalfiber"},"FunctionalFiber"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"FunctionalFiber"),": { ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiberfunction"},(0,i.kt)("inlineCode",{parentName:"a"},"FiberFunction"))," ; ",(0,i.kt)("inlineCode",{parentName:"p"},"functionProps"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props")),">"," ; ",(0,i.kt)("inlineCode",{parentName:"p"},"memorizedStates"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]  } & ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},(0,i.kt)("inlineCode",{parentName:"a"},"StaticFiber")),">"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"FunctionalFiber")," represents an element, which is generated by a function call.\nThis generator-function is stored in the property ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction")," and when the component\nis re-rendered, the ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction")," is called with ",(0,i.kt)("inlineCode",{parentName:"p"},"functionalProps")," as argument.\nIn the ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction"),", hooks can be called, whose values are stored in the ",(0,i.kt)("inlineCode",{parentName:"p"},"memorizedStates")," array."),(0,i.kt)("h4",{id:"staticfiber-properties"},"StaticFiber Properties"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"FunctionalFiber")," contains all properties of a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),", but only as optionals.\nThe properties ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"children"),", which define a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),",\nare only assigned when the component is unwrapped i.e., its ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction")," is called.\nThis happens during rendering, when the ",(0,i.kt)("inlineCode",{parentName:"p"},"fiberFunction")," is called. The returned ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),"\nwill be merged into the ",(0,i.kt)("inlineCode",{parentName:"p"},"FunctionalFiber")," and provide these three properties."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L73"},"fiber.ts:73")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"Props"),": { ",(0,i.kt)("inlineCode",{parentName:"p"},"children?"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"never")," ; ",(0,i.kt)("inlineCode",{parentName:"p"},"key?"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ; ",(0,i.kt)("inlineCode",{parentName:"p"},"style?"),": ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#styleprop"},(0,i.kt)("inlineCode",{parentName:"a"},"StyleProp")),"  } & ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLElement"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"style"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"children"'),">",">"," & ",(0,i.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,i.kt)("p",null,"The Props which a SuiWeb ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},"Fiber")," expects."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L117"},"fiber.ts:117")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"staticfiber"},"StaticFiber"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"StaticFiber"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"StaticFiber")," represents a static element in the DOM. It does not contain\na function and thus can't use hooks, so it will never trigger a re-render.\nIt is completely defined by its ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"children"),".\nIts ",(0,i.kt)("inlineCode",{parentName:"p"},"domNode")," will be assigned when it is rendered to the DOM."),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"children")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Map"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The children of the fiber are stored in a map where every child has a unique key. If no ",(0,i.kt)("inlineCode",{parentName:"td"},"key")," is provided in the ",(0,i.kt)("inlineCode",{parentName:"td"},"props")," of the corresponding child, a default key is used.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"domNode?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"HTMLElement")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Text")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The reference to the DOM node which this fiber represents. Is only set when the fiber is rendered.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Readonly"),"<",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The props of the static fiber. These will be added to them DOM node when it is rendered. There are special props like ",(0,i.kt)("inlineCode",{parentName:"td"},"key")," which serve their custom purpose and are not added to the DOM node. ",(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#isnormalprop"},"isNormalProp"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#staticfibertype"},(0,i.kt)("inlineCode",{parentName:"a"},"StaticFiberType"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of the static fiber. It is either a html tag or a custom tag for text or placeholder nodes.")))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L14"},"fiber.ts:14")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"staticfibertype"},"StaticFiberType"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"StaticFiberType"),": keyof ",(0,i.kt)("inlineCode",{parentName:"p"},"HTMLElementTagNameMap")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"TEXT_NODE"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"PLACEHOLDER_NODE"')),(0,i.kt)("p",null,"The possible type of a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),".\nFibers with type ",(0,i.kt)("inlineCode",{parentName:"p"},"TEXT_NODE")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"PLACEHOLDER_NODE")," will not be rendered\nto the dom directly, but are treated specially instead."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L43"},"fiber.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"styleprop"},"StyleProp"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"StyleProp"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"CSSStyleDeclaration"),">"," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Partial"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"CSSStyleDeclaration"),">","[]"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"StyleProp")," is usally passed as the ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," property of the props.\nIt can either be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a CSS string which is set directly to style attribute."),(0,i.kt)("li",{parentName:"ul"},"an object containing CSS properties in camelCase."),(0,i.kt)("li",{parentName:"ul"},"an array of objects containing CSS properties in camcelCase.")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L144"},"fiber.ts:144")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"createelement"},"createElement"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"createElement"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"props"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"...children"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("p",null,"The SuiWeb implementation of the generic ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#createelementfunction"},"CreateElementFunction"),", which creates a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},"Fiber"),"."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"type")),(0,i.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,i.kt)("inlineCode",{parentName:"td"},"HTMLElementTagNameMap")," ","|"," (",(0,i.kt)("inlineCode",{parentName:"td"},"props?"),": ",(0,i.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"unknown"),">",") => ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"If the type is a HTML tag, a ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber")," is created. If it's a function, a ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber")," is created.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"props")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#props"},(0,i.kt)("inlineCode",{parentName:"a"},"Props"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The props of the element.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"...children")),(0,i.kt)("td",{parentName:"tr",align:"left"},"(",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/utils#primitive"},(0,i.kt)("inlineCode",{parentName:"a"},"Primitive"))," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber")),")[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The children of the element.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},(0,i.kt)("inlineCode",{parentName:"a"},"Fiber"))),(0,i.kt)("p",null,"The created ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#fiber"},"Fiber"),", either a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber")," or a ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber"),"."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L171"},"fiber.ts:171")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isfunctionalfiber"},"isFunctionalFiber"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isFunctionalFiber"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"object"),"): object is FunctionalFiber"),(0,i.kt)("p",null,"Determines if an object is of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber"),"."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The object to check.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"object is FunctionalFiber"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the object is of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#functionalfiber"},"FunctionalFiber"),"."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L104"},"fiber.ts:104")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isnormalprop"},"isNormalProp"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isNormalProp"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"propName"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Determines if the given ",(0,i.kt)("inlineCode",{parentName:"p"},"propName")," is a normal prop which should be directly added to\nthe DOM node, or if it serves a custom purpose.\nCurrently there are three special props, namely ",(0,i.kt)("inlineCode",{parentName:"p"},"children"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"key"),"."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"propName")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The name of the prop to check.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the given prop is a normal prop."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L153"},"fiber.ts:153")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isstaticfiber"},"isStaticFiber"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isStaticFiber"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"object"),"): object is StaticFiber"),(0,i.kt)("p",null,"Determines if an object is of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),"."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"object")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The object to check.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"object is StaticFiber"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the object is of type ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/internal/modules/fiber#staticfiber"},"StaticFiber"),"."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/suiweb/suiweb/blob/a26f1e3/suiweb/src/fiber.ts#L50"},"fiber.ts:50")))}m.isMDXComponent=!0}}]);